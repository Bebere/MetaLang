@@
#include <iostream>
#include "metalang.hpp"
@@

fun I (x) = x
fun K (x) = \(y) = x
fun S (x) = \(y) = (\(z) = (x(z))(y(z)))

val T = K
val F = S(K)
val NOT = (F)(T)

val OR = T
val AND = F

fun SKI2Int (n) = (n(\(x) = x + 1))(0)
val Succ = S ((S(K(S)))(K))
val Zero = K(I)
val One = Succ(Zero)
val Two = Succ(One)
val Three = Succ(Two)
val Four = Succ(Three)
val Five = Succ(Four)
val Six = Succ(Five)

val Plus = \(n) = (\(m) = (m(Succ))(n))
val Mult = \(m) = (\(n) = (\(f) = m(n(f))))
val Expo = \(m) = \(n) = n(m)

val Int_Two_Plus_Three = SKI2Int( (Plus(Two))(Three) )
val Int_Two_Plus_Four = SKI2Int( (Plus(Two))(Four) )
val Int_Two_Mult_Three = SKI2Int( (Mult(Two))(Three) )
val Int_Four_Mult_Three = SKI2Int( (Mult(Four))(Three) )
val Int_Two_Exp_Two = SKI2Int( (Expo(Two))(Two) )
val Int_Three_Exp_Two = SKI2Int( (Expo(Three))(Two) )

fun SKI2Bool (x) = (x(1))(0)
val SKSK = SKI2Bool( ((S(K))(S))(K) )
val SKIISK = SKI2Bool( ((S(K))(I(I(S))))(K) )

@@

int main(int argc, char *argv[])
{
        std::cout << Int_Two_Plus_Three::value << std::endl;
        std::cout << Int_Two_Plus_Four::value << std::endl;
        std::cout << Int_Two_Mult_Three::value << std::endl;
        std::cout << Int_Four_Mult_Three::value << std::endl;
        std::cout << Int_Two_Exp_Two::value << std::endl;
        std::cout << Int_Three_Exp_Two::value << std::endl;
        std::cout << SKSK::value << std::endl;
        std::cout << SKIISK::value << std::endl;
        return 0;
}
@@
