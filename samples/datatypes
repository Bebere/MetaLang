datatype metalist of car * cdr
datatype metanil

val lst = metalist(1, metalist(2, metalist(3, metanil)))

val get_car = \(lst) = lst::car
val get_cdr = \(lst) = lst::cdr


datatype metatree of dat * left * right
datatype metaleaf

datatype metaint of value


val get_cdar = \(lst) = (get_cdr(lst))::car
val get_cddr = \(lst) = (get_cdr(lst))::cdr
val get_cddar = \(lst) = lst::cdr::cdr::car

val get_cdddar = \(lst, x) = ((get_cddr(lst))::cdr::car)(x)
val k = \(x) = x * 2


val typetraits = \(lst) = if ((metalist? lst) or (metanil? lst)) then 1 
						  else if ((metatree? lst) or (metaleaf? lst)) then 2
						  else 0


val tree = metatree(1, 
					metatree(k, metaleaf, metaleaf),
					metatree(lst, metaleaf, metaleaf))

val ty_lst  = typetraits(lst)
val ty_tree = typetraits(tree)
